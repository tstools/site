{"statements":[{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.restArgs","newFunction":"function(func, startIndex) {\r\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n    return function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"restArgs","newType":"(func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.isSymbol","newFunction":"function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"isSymbol","newType":"(obj: any) => boolean","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.matcher","newFunction":"function(attrs) {\r\n    attrs = _.extendOwn({}, attrs);\r\n    return function(obj) {\r\n      return _.isMatch(obj, attrs);\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"matcher","newType":"(attrs: any) => (obj: any) => boolean","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.mapObject","newFunction":"function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = _.keys(obj),\r\n        length = keys.length,\r\n        results = {};\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys[index];\r\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"mapObject","newType":"(obj: interface_450, iteratee: any, context: any) => interface_402","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.propertyOf","newFunction":"function(obj) {\r\n    return obj == null ? function(){} : function(key) {\r\n      return obj[key];\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"propertyOf","newType":"(obj: interface_435) => (key: string | number) => any","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.unzip","newFunction":"function(array) {\r\n    var length = array && _.max(array, getLength).length || 0;\r\n    var result = Array(length);\r\n\r\n    for (var index = 0; index < length; index++) {\r\n      result[index] = _.pluck(array, index);\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"unzip","newType":"(array: interface_616 | string[]) => Array<any[]>","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.isError","newFunction":"function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"isError","newType":"(obj: any) => boolean","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.findLastIndex","newFunction":"function(array, predicate, context) {\r\n      predicate = cb(predicate, context);\r\n      var length = getLength(array);\r\n      var index = dir > 0 ? 0 : length - 1;\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        if (predicate(array[index], index, array)) return index;\r\n      }\r\n      return -1;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"findLastIndex","newType":"(array: string[], predicate: any, context: any) => number","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.extendOwn","newFunction":"function(obj) {\r\n      var length = arguments.length;\r\n      if (defaults) obj = Object(obj);\r\n      if (length < 2 || obj == null) return obj;\r\n      for (var index = 1; index < length; index++) {\r\n        var source = arguments[index],\r\n            keys = keysFunc(source),\r\n            l = keys.length;\r\n        for (var i = 0; i < l; i++) {\r\n          var key = keys[i];\r\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n        }\r\n      }\r\n      return obj;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"extendOwn","newType":"(obj: any) => any","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.create","newFunction":"function(prototype, props) {\r\n    var result = baseCreate(prototype);\r\n    if (props) _.extendOwn(result, props);\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"create","newType":"(prototype: interface_588, props: any) => any","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.allKeys","newFunction":"function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    var keys = [];\r\n    for (var key in obj) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"allKeys","newType":"(obj: any) => interface_581 | string[]","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.includes","newFunction":"function(obj, item, fromIndex, guard) {\r\n    if (!isArrayLike(obj)) obj = _.values(obj);\r\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n    return _.indexOf(obj, item, fromIndex) >= 0;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"includes","newType":"(obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.isMatch","newFunction":"function(object, attrs) {\r\n    var keys = _.keys(attrs), length = keys.length;\r\n    if (object == null) return !length;\r\n    var obj = Object(object);\r\n    for (var i = 0; i < length; i++) {\r\n      var key = keys[i];\r\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n    }\r\n    return true;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"isMatch","newType":"(object: any, attrs: any) => boolean","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.findKey","newFunction":"function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = _.keys(obj), key;\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      key = keys[i];\r\n      if (predicate(obj[key], key, obj)) return key;\r\n    }\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"findKey","newType":"(obj: interface_443, predicate: any, context: any) => string","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.chunk","newFunction":"function(array, count) {\r\n    if (count == null || count < 1) return [];\r\n\r\n    var result = [];\r\n    var i = 0, length = array.length;\r\n    while (i < length) {\r\n      result.push(slice.call(array, i, i += count));\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"chunk","newType":"(array: {length: number}, count: number) => Array<any>","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.findIndex","newFunction":"function(array, predicate, context) {\r\n      predicate = cb(predicate, context);\r\n      var length = getLength(array);\r\n      var index = dir > 0 ? 0 : length - 1;\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        if (predicate(array[index], index, array)) return index;\r\n      }\r\n      return -1;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"findIndex","newType":"(array: string[], predicate: any, context: any) => number","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.assign","newFunction":"function(obj) {\r\n      var length = arguments.length;\r\n      if (defaults) obj = Object(obj);\r\n      if (length < 2 || obj == null) return obj;\r\n      for (var index = 1; index < length; index++) {\r\n        var source = arguments[index],\r\n            keys = keysFunc(source),\r\n            l = keys.length;\r\n        for (var i = 0; i < l; i++) {\r\n          var key = keys[i];\r\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n        }\r\n      }\r\n      return obj;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._","key":"assign","newType":"(obj: any) => any","isAny":false,"isClass":true,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.bind","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.bind","oldFunction":"function(func, context) {\r\n        var args, bound;\r\n        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\r\n        if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\r\n        args = slice.call(arguments, 2);\r\n        bound = function() {\r\n            if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\r\n            Ctor.prototype = func.prototype;\r\n            var self = new Ctor;\r\n            Ctor.prototype = null;\r\n            var result = func.apply(self, args.concat(slice.call(arguments)));\r\n            if (_.isObject(result)) return result;\r\n            return self;\r\n        };\r\n        return bound;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.bind","isClass":true,"newType":"() => interface_346","newTypeDescription":"function","oldType":"(func: string | interface_918, context: any) => any","oldArgCount":2,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.pick","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.pick","oldFunction":"function(obj, iteratee, context) {\r\n        var result = {}, key;\r\n        if (obj == null) return result;\r\n        if (_.isFunction(iteratee)) {\r\n            iteratee = createCallback(iteratee, context);\r\n            for (key in obj) {\r\n                var value = obj[key];\r\n                if (iteratee(value, key, obj)) result[key] = value;\r\n            }\r\n        } else {\r\n            var keys = concat.apply([], slice.call(arguments, 1));\r\n            obj = new Object(obj);\r\n            for (var i = 0, length = keys.length; i < length; i++) {\r\n                key = keys[i];\r\n                if (key in obj) result[key] = obj[key];\r\n            }\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.pick","isClass":true,"newType":"() => interface_385","newTypeDescription":"function","oldType":"(obj: Object | interface_969, iteratee: any, context: any) => interface_894","oldArgCount":3,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._","newFunction":"function(obj) {\r\n    if (obj instanceof _) return obj;\r\n    if (!(this instanceof _)) return new _(obj);\r\n    this._wrapped = obj;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.partial","oldFunction":"function(func) {\r\n        var boundArgs = slice.call(arguments, 1);\r\n        return function() {\r\n            var position = 0;\r\n            var args = boundArgs.slice();\r\n            for (var i = 0, length = args.length; i < length; i++) {\r\n                if (args[i] === _) args[i] = arguments[position++];\r\n            }\r\n            while (position < arguments.length) args.push(arguments[position++]);\r\n            return func.apply(this, args);\r\n        };\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.partial","newType":"interface interface_530 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : () => any;\n    placeholder: typeof _;\n}\n\n","oldType":"(func: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any, arg1: number) => () => () => any","containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.zip","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.zip","oldFunction":"function(array) {\r\n        if (array == null) return [];\r\n        var length = _.max(arguments, 'length').length;\r\n        var results = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            results[i] = _.pluck(arguments, i);\r\n        }\r\n        return results;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.zip","isClass":true,"newType":"() => Array<any[]>","newTypeDescription":"function","oldType":"(array: any) => Array<any[]>","oldArgCount":1,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.contains","newFunction":"function(obj, item, fromIndex, guard) {\r\n    if (!isArrayLike(obj)) obj = _.values(obj);\r\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n    return _.indexOf(obj, item, fromIndex) >= 0;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.contains","oldFunction":"function(obj, target) {\r\n        if (obj == null) return false;\r\n        if (obj.length !== +obj.length) obj = _.values(obj);\r\n        return _.indexOf(obj, target) >= 0;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.contains","isClass":true,"newType":"(obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean","newTypeDescription":"function","oldType":"(obj: interface_1144 | any[], target: any) => boolean","oldArgCount":2,"newArgCount":4,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.delay","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.delay","oldFunction":"function(func, wait) {\r\n        var args = slice.call(arguments, 2);\r\n        return setTimeout(function(){\r\n            return func.apply(null, args);\r\n        }, wait);\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.delay","isClass":true,"newType":"() => number","newTypeDescription":"function","oldType":"(func: {apply: (arg0: void, arg1: void) => void}, wait: any) => number","oldArgCount":2,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.difference","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.difference","oldFunction":"function(array) {\r\n        var rest = flatten(slice.call(arguments, 1), true, true, []);\r\n        return _.filter(array, function(value){\r\n            return !_.contains(rest, value);\r\n        });\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.difference","isClass":true,"newType":"() => Array<any>","newTypeDescription":"function","oldType":"(array: interface_1148 | string[]) => Array<any>","oldArgCount":1,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.invoke","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.invoke","oldFunction":"function(obj, method) {\r\n        var args = slice.call(arguments, 2);\r\n        var isFunc = _.isFunction(method);\r\n        return _.map(obj, function(value) {\r\n            return (isFunc ? method : value[method]).apply(value, args);\r\n        });\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.invoke","isClass":true,"newType":"() => any[]","newTypeDescription":"function","oldType":"(obj: interface_829, method: string | interface_832) => any[]","oldArgCount":2,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.result","newFunction":"function(object, prop, fallback) {\r\n    var value = object == null ? void 0 : object[prop];\r\n    if (value === void 0) {\r\n      value = fallback;\r\n    }\r\n    return _.isFunction(value) ? value.call(object) : value;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.result","oldFunction":"function(object, property) {\r\n        if (object == null) return void 0;\r\n        var value = object[property];\r\n        return _.isFunction(value) ? object[property]() : value;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.result","isClass":true,"newType":"(object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376","newTypeDescription":"function","oldType":"(object: interface_958, property: string | number) => any","oldArgCount":2,"newArgCount":3,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.iteratee","newFunction":"function(value, context) {\r\n    return cb(value, context, Infinity);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.iteratee","oldFunction":"function(value, context, argCount) {\r\n        if (value == null) return _.identity;\r\n        if (_.isFunction(value)) return createCallback(value, context, argCount);\r\n        if (_.isObject(value)) return _.matches(value);\r\n        return _.property(value);\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.iteratee","isClass":true,"newType":"(value: any, context: any) => boolean | StringConstructor","newTypeDescription":"function","oldType":"(value: any, context: any, argCount: number) => any","oldArgCount":3,"newArgCount":2,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.bindAll","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.bindAll","oldFunction":"function(obj) {\r\n        var i, length = arguments.length, key;\r\n        if (length <= 1) throw new Error('bindAll must be passed function names');\r\n        for (i = 1; i < length; i++) {\r\n            key = arguments[i];\r\n            obj[key] = _.bind(obj[key], obj);\r\n        }\r\n        return obj;\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.bindAll","isClass":true,"newType":"() => any","newTypeDescription":"function","oldType":"(obj: interface_981) => interface_902","oldArgCount":1,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.omit","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.omit","oldFunction":"function(obj, iteratee, context) {\r\n        if (_.isFunction(iteratee)) {\r\n            iteratee = _.negate(iteratee);\r\n        } else {\r\n            var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\r\n            iteratee = function(value, key) {\r\n                return !_.contains(keys, key);\r\n            };\r\n        }\r\n        return _.pick(obj, iteratee, context);\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.omit","isClass":true,"newType":"() => interface_417","newTypeDescription":"function","oldType":"(obj: Object | interface_982, iteratee: string | interface_1022, context: any) => interface_903","oldArgCount":3,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.without","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.without","oldFunction":"function(array) {\r\n        return _.difference(array, slice.call(arguments, 1));\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.without","isClass":true,"newType":"() => Array<any>","newTypeDescription":"function","oldType":"(array: string[] | interface_1172) => Array<any>","oldArgCount":1,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.defer","newFunction":"function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.defer","oldFunction":"function(func) {\r\n        return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\r\n    }","oldJSDoc":null,"type":"changedArgCount","typePath":"window._.defer","isClass":true,"newType":"() => any","newTypeDescription":"function","oldType":"(func: number) => number","oldArgCount":1,"newArgCount":0,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].restArgs","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"restArgs","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].isSymbol","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"isSymbol","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].matcher","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"matcher","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].mapObject","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"mapObject","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].propertyOf","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"propertyOf","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].unzip","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"unzip","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].isError","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"isError","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].findLastIndex","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"findLastIndex","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].extendOwn","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"extendOwn","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].toString","newFunction":"function() {\r\n    return '' + this._wrapped;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"toString","newType":"() => string","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].create","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"create","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].allKeys","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"allKeys","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].includes","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"includes","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].isMatch","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"isMatch","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].findKey","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"findKey","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].chunk","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"chunk","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].toJSON","newFunction":"function() {\r\n    return this._wrapped;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"toJSON","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].valueOf","newFunction":"function() {\r\n    return this._wrapped;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"valueOf","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].findIndex","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"findIndex","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.[constructor].[return].assign","newFunction":"function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      }","newJSDoc":null,"oldInclosingFunctionPath":"window._.[constructor]","oldFunction":"function(obj) {\r\n        if (obj instanceof _) return obj;\r\n        if (!(this instanceof _)) return new _(obj);\r\n        this._wrapped = obj;\r\n    }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.[constructor].[return]","key":"assign","newType":"() => any","isAny":false,"isClass":false,"containerType":"class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n","containerDescription":"class _"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.indexBy.[function]","newFunction":"function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.indexBy.[function]","oldFunction":"function(obj, iteratee, context) {\r\n            var result = {};\r\n            iteratee = _.iteratee(iteratee, context);\r\n            _.each(obj, function(value, index) {\r\n                var key = iteratee(value, index, obj);\r\n                behavior(result, value, key);\r\n            });\r\n            return result;\r\n        }","oldJSDoc":null,"type":"changedType","typePath":"window._.indexBy.[function].[return]","newType":"Array<Array<any>>","oldType":"// Seen as: result\ninterface interface_842 {\n}\n\n","containerType":"(obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.object.[function]","newFunction":"function(list, values) {\r\n    var result = {};\r\n    for (var i = 0, length = getLength(list); i < length; i++) {\r\n      if (values) {\r\n        result[list[i]] = values[i];\r\n      } else {\r\n        result[list[i][0]] = list[i][1];\r\n      }\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.object.[function]","oldFunction":"function(list, values) {\r\n        if (list == null) return {};\r\n        var result = {};\r\n        for (var i = 0, length = list.length; i < length; i++) {\r\n            if (values) {\r\n                result[list[i]] = values[i];\r\n            } else {\r\n                result[list[i][0]] = list[i][1];\r\n            }\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.object.[function].[arg0]","newType":"Array<any>","oldType":"// Seen as: list\ninterface interface_956 {\n    [index: number]: string | number | interface_1071;\n    length: number;\n}\n\n","containerType":"(list: Array<any>, values: interface_462) => interface_369","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.bind.[function]","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.bind.[function]","oldFunction":"function(func, context) {\r\n        var args, bound;\r\n        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\r\n        if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\r\n        args = slice.call(arguments, 2);\r\n        bound = function() {\r\n            if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\r\n            Ctor.prototype = func.prototype;\r\n            var self = new Ctor;\r\n            Ctor.prototype = null;\r\n            var result = func.apply(self, args.concat(slice.call(arguments)));\r\n            if (_.isObject(result)) return result;\r\n            return self;\r\n        };\r\n        return bound;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.bind.[function].[return]","newType":"interface interface_346 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : number | any[] | interface_507;\n    placeholder: typeof _;\n}\n\n","oldType":"any","containerType":"() => interface_346","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.find.[function]","newFunction":"function(obj, predicate, context) {\r\n    var key;\r\n    if (isArrayLike(obj)) {\r\n      key = _.findIndex(obj, predicate, context);\r\n    } else {\r\n      key = _.findKey(obj, predicate, context);\r\n    }\r\n    if (key !== void 0 && key !== -1) return obj[key];\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.find.[function]","oldFunction":"function(obj, predicate, context) {\r\n        var result;\r\n        predicate = _.iteratee(predicate, context);\r\n        _.some(obj, function(value, index, list) {\r\n            if (predicate(value, index, list)) {\r\n                result = value;\r\n                return true;\r\n            }\r\n        });\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.find.[function].[arg0]","newType":"string[] | interface_589","oldType":"// Seen as: obj\ninterface interface_971 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: string[] | interface_589, predicate: any, context: any) => any","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.first.[function]","newFunction":"function(array, n, guard) {\r\n    if (array == null) return void 0;\r\n    if (n == null || guard) return array[0];\r\n    return _.initial(array, array.length - n);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.first.[function]","oldFunction":"function(array, n, guard) {\r\n        if (array == null) return void 0;\r\n        if (n == null || guard) return array[0];\r\n        if (n < 0) return [];\r\n        return slice.call(array, 0, n);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.first.[function].[arg0]","newType":"// Seen as: array\ninterface interface_448 {\n    [index: number]: any;\n    length: number;\n}\n\n","oldType":"// Seen as: array\ninterface interface_936 {\n    [index: number]: any;\n}\n\n","containerType":"(array: interface_448, n: number, guard: any) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.toArray.[function]","newFunction":"function(obj) {\r\n    if (!obj) return [];\r\n    if (_.isArray(obj)) return slice.call(obj);\r\n    if (_.isString(obj)) {\r\n      // Keep surrogate pair characters together\r\n      return obj.match(reStrSymbol);\r\n    }\r\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\r\n    return _.values(obj);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.toArray.[function]","oldFunction":"function(obj) {\r\n        if (!obj) return [];\r\n        if (_.isArray(obj)) return slice.call(obj);\r\n        if (obj.length === +obj.length) return _.map(obj, _.identity);\r\n        return _.values(obj);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.toArray.[function].[arg0]","newType":"interface_613 | string[]","oldType":"// Seen as: obj\ninterface interface_945 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: interface_613 | string[]) => any[]","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.findWhere.[function]","newFunction":"function(obj, attrs) {\r\n    return _.find(obj, _.matcher(attrs));\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.findWhere.[function]","oldFunction":"function(obj, attrs) {\r\n        return _.find(obj, _.matches(attrs));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.findWhere.[function].[arg1]","newType":"any","oldType":"// Seen as: obj\ninterface interface_987 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n","containerType":"(obj: interface_593 | string[], attrs: any) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.tail.[function]","newFunction":"function(array, n, guard) {\r\n    return slice.call(array, n == null || guard ? 1 : n);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.tail.[function]","oldFunction":"function(array, n, guard) {\r\n        return slice.call(array, n == null || guard ? 1 : n);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.tail.[function].[arg0]","newType":"{\n    length: any\n}\n","oldType":"any","containerType":"(array: {length: any}, n: number, guard: any) => any","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.template.[function]","newFunction":"function(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n        \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n        source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.template.[function]","oldFunction":"function(text, settings, oldSettings) {\r\n        if (!settings && oldSettings) settings = oldSettings;\r\n        settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n                (settings.escape || noMatch).source,\r\n                (settings.interpolate || noMatch).source,\r\n                (settings.evaluate || noMatch).source\r\n            ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n            source += text.slice(index, offset).replace(escaper, escapeChar);\r\n            index = offset + match.length;\r\n\r\n            if (escape) {\r\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n            } else if (interpolate) {\r\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n            } else if (evaluate) {\r\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n            }\r\n\r\n            // Adobe VMs need the match returned to produce the correct offest.\r\n            return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n            source + 'return __p;\\n';\r\n\r\n        try {\r\n            var render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n            e.source = source;\r\n            throw e;\r\n        }\r\n\r\n        var template = function(data) {\r\n            return render.call(this, data, _);\r\n        };\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.template.[function].[arg2]","newType":"any","oldType":"// Seen as: oldSettings, settings\ninterface interface_1168 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: any;\n    evaluate: any;\n    interpolate: any;\n    variable: any;\n}\n\n","containerType":"(text: interface_611, settings: any, oldSettings: any) => interface_411","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.size.[function]","newFunction":"function(obj) {\r\n    if (obj == null) return 0;\r\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.size.[function]","oldFunction":"function(obj) {\r\n        if (obj == null) return 0;\r\n        return obj.length === +obj.length ? obj.length : _.keys(obj).length;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.size.[function].[arg0]","newType":"interface_609 | string[]","oldType":"// Seen as: obj\ninterface interface_1165 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: interface_609 | string[]) => number","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.flatten.[function]","newFunction":"function(array, shallow) {\r\n    return flatten(array, shallow, false);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.flatten.[function]","oldFunction":"function(array, shallow) {\r\n        return flatten(array, shallow, false, []);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.flatten.[function].[arg0]","newType":"Array<any>","oldType":"// Seen as: arg1, input, obj\ninterface interface_973 {\n    [index: number]: interface_1084;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(array: Array<any>, shallow: any) => Array<any>","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.groupBy.[function]","newFunction":"function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.groupBy.[function]","oldFunction":"function(obj, iteratee, context) {\r\n            var result = {};\r\n            iteratee = _.iteratee(iteratee, context);\r\n            _.each(obj, function(value, index) {\r\n                var key = iteratee(value, index, obj);\r\n                behavior(result, value, key);\r\n            });\r\n            return result;\r\n        }","oldJSDoc":null,"type":"changedType","typePath":"window._.groupBy.[function].[return]","newType":"Array<any[]>","oldType":"// Seen as: result\ninterface interface_836 {\n}\n\n","containerType":"(obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.intersection.[function]","newFunction":"function(array) {\r\n    var result = [];\r\n    var argsLength = arguments.length;\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var item = array[i];\r\n      if (_.contains(result, item)) continue;\r\n      var j;\r\n      for (j = 1; j < argsLength; j++) {\r\n        if (!_.contains(arguments[j], item)) break;\r\n      }\r\n      if (j === argsLength) result.push(item);\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.intersection.[function]","oldFunction":"function(array) {\r\n        if (array == null) return [];\r\n        var result = [];\r\n        var argsLength = arguments.length;\r\n        for (var i = 0, length = array.length; i < length; i++) {\r\n            var item = array[i];\r\n            if (_.contains(result, item)) continue;\r\n            for (var j = 1; j < argsLength; j++) {\r\n                if (!_.contains(arguments[j], item)) break;\r\n            }\r\n            if (j === argsLength) result.push(item);\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.intersection.[function].[arg0]","newType":"string[]","oldType":"// Seen as: array\ninterface interface_967 {\n    [index: number]: any;\n    length: number;\n}\n\n","containerType":"(array: string[]) => interface_598 | string[]","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.iteratee.[function]","newFunction":"function(value, context) {\r\n    return cb(value, context, Infinity);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.iteratee.[function]","oldFunction":"function(value, context, argCount) {\r\n        if (value == null) return _.identity;\r\n        if (_.isFunction(value)) return createCallback(value, context, argCount);\r\n        if (_.isObject(value)) return _.matches(value);\r\n        return _.property(value);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.iteratee.[function].[return]","newType":"boolean | StringConstructor","oldType":"any","containerType":"(value: any, context: any) => boolean | StringConstructor","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.where.[function]","newFunction":"function(obj, attrs) {\r\n    return _.filter(obj, _.matcher(attrs));\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.where.[function]","oldFunction":"function(obj, attrs) {\r\n        return _.filter(obj, _.matches(attrs));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.where.[function].[arg1]","newType":"any","oldType":"// Seen as: obj\ninterface interface_1031 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n","containerType":"(obj: string[] | interface_618, attrs: any) => Array<any>","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.chain.[function]","newFunction":"function(obj) {\r\n    var instance = _(obj);\r\n    instance._chain = true;\r\n    return instance;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.chain.[function]","oldFunction":"function(obj) {\r\n        var instance = _(obj);\r\n        instance._chain = true;\r\n        return instance;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.chain.[function].[return]","newType":"any","oldType":"{_chain: boolean} | _","containerType":"(obj: any) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.union.[function]","newFunction":"function() {\r\n      var length = Math.max(arguments.length - startIndex, 0);\r\n      var rest = Array(length);\r\n      for (var index = 0; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.union.[function]","oldFunction":"function() {\r\n        return _.uniq(flatten(arguments, true, true, []));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.union.[function].[return]","newType":"string[] | interface_614","oldType":"any[]","containerType":"() => string[] | interface_614","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.once.[function]","newFunction":"function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.once.[function]","oldFunction":"function() {\r\n            var position = 0;\r\n            var args = boundArgs.slice();\r\n            for (var i = 0, length = args.length; i < length; i++) {\r\n                if (args[i] === _) args[i] = arguments[position++];\r\n            }\r\n            while (position < arguments.length) args.push(arguments[position++]);\r\n            return func.apply(this, args);\r\n        }","oldJSDoc":null,"type":"changedType","typePath":"window._.once.[function].[return]","newType":"any","oldType":"() => any","containerType":"() => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.negate.[function]","newFunction":"function(predicate) {\r\n    return function() {\r\n      return !predicate.apply(this, arguments);\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.negate.[function]","oldFunction":"function(predicate) {\r\n        return function() {\r\n            return !predicate.apply(this, arguments);\r\n        };\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.negate.[function].[arg0]","newType":"boolean | StringConstructor","oldType":"any","containerType":"(predicate: boolean | StringConstructor) => () => boolean","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.sample.[function]","newFunction":"function(obj, n, guard) {\r\n    if (n == null || guard) {\r\n      if (!isArrayLike(obj)) obj = _.values(obj);\r\n      return obj[_.random(obj.length - 1)];\r\n    }\r\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\r\n    var length = getLength(sample);\r\n    n = Math.max(Math.min(n, length), 0);\r\n    var last = length - 1;\r\n    for (var index = 0; index < n; index++) {\r\n      var rand = _.random(index, last);\r\n      var temp = sample[index];\r\n      sample[index] = sample[rand];\r\n      sample[rand] = temp;\r\n    }\r\n    return sample.slice(0, n);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.sample.[function]","oldFunction":"function(obj, n, guard) {\r\n        if (n == null || guard) {\r\n            if (obj.length !== +obj.length) obj = _.values(obj);\r\n            return obj[_.random(obj.length - 1)];\r\n        }\r\n        return _.shuffle(obj).slice(0, Math.max(0, n));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.sample.[function].[arg1]","newType":"number","oldType":"any","containerType":"(obj: string[] | interface_607, n: number, guard: any) => any","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.max.[function]","newFunction":"function(obj, iteratee, context) {\r\n    var result = -Infinity, lastComputed = -Infinity,\r\n        value, computed;\r\n    if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object') && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value > result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.max.[function]","oldFunction":"function(obj, iteratee, context) {\r\n        var result = -Infinity, lastComputed = -Infinity,\r\n            value, computed;\r\n        if (iteratee == null && obj != null) {\r\n            obj = obj.length === +obj.length ? obj : _.values(obj);\r\n            for (var i = 0, length = obj.length; i < length; i++) {\r\n                value = obj[i];\r\n                if (value > result) {\r\n                    result = value;\r\n                }\r\n            }\r\n        } else {\r\n            iteratee = _.iteratee(iteratee, context);\r\n            _.each(obj, function(value, index, list) {\r\n                computed = iteratee(value, index, list);\r\n                if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n                    result = value;\r\n                    lastComputed = computed;\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.max.[function].[return]","newType":"string","oldType":"number","containerType":"(obj: string[] | interface_602, iteratee: any, context: any) => string","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.sortBy.[function]","newFunction":"function(obj, iteratee, context) {\r\n    var index = 0;\r\n    iteratee = cb(iteratee, context);\r\n    return _.pluck(_.map(obj, function(value, key, list) {\r\n      return {\r\n        value: value,\r\n        index: index++,\r\n        criteria: iteratee(value, key, list)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria;\r\n      var b = right.criteria;\r\n      if (a !== b) {\r\n        if (a > b || a === void 0) return 1;\r\n        if (a < b || b === void 0) return -1;\r\n      }\r\n      return left.index - right.index;\r\n    }), 'value');\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.sortBy.[function]","oldFunction":"function(obj, iteratee, context) {\r\n        iteratee = _.iteratee(iteratee, context);\r\n        return _.pluck(_.map(obj, function(value, index, list) {\r\n            return {\r\n                value: value,\r\n                index: index,\r\n                criteria: iteratee(value, index, list)\r\n            };\r\n        }).sort(function(left, right) {\r\n            var a = left.criteria;\r\n            var b = right.criteria;\r\n            if (a !== b) {\r\n                if (a > b || a === void 0) return 1;\r\n                if (a < b || b === void 0) return -1;\r\n            }\r\n            return left.index - right.index;\r\n        }), 'value');\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.sortBy.[function].[arg0]","newType":"interface_610 | string[]","oldType":"// Seen as: obj\ninterface interface_921 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: interface_610 | string[], iteratee: any, context: any) => any[]","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.findWhere.[function]","newFunction":"function(obj, attrs) {\r\n    return _.find(obj, _.matcher(attrs));\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.findWhere.[function]","oldFunction":"function(obj, attrs) {\r\n        return _.find(obj, _.matches(attrs));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.findWhere.[function].[arg0]","newType":"interface_593 | string[]","oldType":"// Seen as: obj\ninterface interface_905 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: interface_593 | string[], attrs: any) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.pluck.[function]","newFunction":"function(obj, key) {\r\n    return _.map(obj, _.property(key));\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.pluck.[function]","oldFunction":"function(obj, key) {\r\n        return _.map(obj, _.property(key));\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.pluck.[function].[arg0]","newType":"interface_605 | string[]","oldType":"// Seen as: arguments, obj\ninterface interface_930 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: interface_605 | string[], key: string) => any[]","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.clone.[function]","newFunction":"function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.clone.[function]","oldFunction":"function(obj) {\r\n        if (!_.isObject(obj)) return obj;\r\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.clone.[function].[return]","newType":"any","oldType":"// Seen as: obj\ninterface interface_1141 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    slice: () => void;\n}\n\n","containerType":"(obj: interface_583 | Array<any>) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.foldr.[function].[arg1]","newFunction":"function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return chainResult(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.foldr.[function]","oldFunction":"function(obj, iteratee, memo, context) {\r\n        if (obj == null) obj = [];\r\n        iteratee = createCallback(iteratee, context, 4);\r\n        var keys = obj.length !== + obj.length && _.keys(obj),\r\n            index = (keys || obj).length,\r\n            currentKey;\r\n        if (arguments.length < 3) {\r\n            if (!index) throw new TypeError(reduceError);\r\n            memo = obj[keys ? keys[--index] : --index];\r\n        }\r\n        while (index--) {\r\n            currentKey = keys ? keys[index] : index;\r\n            memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n        }\r\n        return memo;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.foldr.[function].[arg1]","newType":"(name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void","oldType":"any","containerType":"(obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.clone.[function]","newFunction":"function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.clone.[function]","oldFunction":"function(obj) {\r\n        if (!_.isObject(obj)) return obj;\r\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.clone.[function].[arg0]","newType":"interface_583 | Array<any>","oldType":"// Seen as: obj\ninterface interface_1140 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    slice: () => void;\n}\n\n","containerType":"(obj: interface_583 | Array<any>) => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.inject.[function].[arg1]","newFunction":"function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return chainResult(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.inject.[function]","oldFunction":"function(obj, iteratee, memo, context) {\r\n        if (obj == null) obj = [];\r\n        iteratee = createCallback(iteratee, context, 4);\r\n        var keys = obj.length !== +obj.length && _.keys(obj),\r\n            length = (keys || obj).length,\r\n            index = 0, currentKey;\r\n        if (arguments.length < 3) {\r\n            if (!length) throw new TypeError(reduceError);\r\n            memo = obj[keys ? keys[index++] : index++];\r\n        }\r\n        for (; index < length; index++) {\r\n            currentKey = keys ? keys[index] : index;\r\n            memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n        }\r\n        return memo;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.inject.[function].[arg1]","newType":"(name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void","oldType":"any","containerType":"(obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.each.[function]","newFunction":"function(obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n      for (i = 0, length = obj.length; i < length; i++) {\r\n        iteratee(obj[i], i, obj);\r\n      }\r\n    } else {\r\n      var keys = _.keys(obj);\r\n      for (i = 0, length = keys.length; i < length; i++) {\r\n        iteratee(obj[keys[i]], keys[i], obj);\r\n      }\r\n    }\r\n    return obj;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.each.[function]","oldFunction":"function(obj, iteratee, context) {\r\n        if (obj == null) return obj;\r\n        iteratee = createCallback(iteratee, context);\r\n        var i, length = obj.length;\r\n        if (length === +length) {\r\n            for (i = 0; i < length; i++) {\r\n                iteratee(obj[i], i, obj);\r\n            }\r\n        } else {\r\n            var keys = _.keys(obj);\r\n            for (i = 0, length = keys.length; i < length; i++) {\r\n                iteratee(obj[keys[i]], keys[i], obj);\r\n            }\r\n        }\r\n        return obj;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.each.[function].[arg1]","newType":"boolean | StringConstructor","oldType":"any","containerType":"(obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[]","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.countBy.[function]","newFunction":"function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.countBy.[function]","oldFunction":"function(obj, iteratee, context) {\r\n            var result = {};\r\n            iteratee = _.iteratee(iteratee, context);\r\n            _.each(obj, function(value, index) {\r\n                var key = iteratee(value, index, obj);\r\n                behavior(result, value, key);\r\n            });\r\n            return result;\r\n        }","oldJSDoc":null,"type":"changedType","typePath":"window._.countBy.[function].[return]","newType":"Array<any>","oldType":"// Seen as: result\ninterface interface_856 {\n}\n\n","containerType":"(obj: string[] | interface_587, iteratee: any, context: any) => Array<any>","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.isEmpty.[function]","newFunction":"function(obj) {\r\n    if (obj == null) return true;\r\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\r\n    return _.keys(obj).length === 0;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.isEmpty.[function]","oldFunction":"function(obj) {\r\n        if (obj == null) return true;\r\n        if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\r\n        for (var key in obj) if (_.has(obj, key)) return false;\r\n        return true;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.isEmpty.[function].[arg0]","newType":"string[] | interface_601","oldType":"{\n    callee: () => void, \n    length: number\n}\n","containerType":"(obj: string[] | interface_601) => boolean","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.sortedIndex.[function]","newFunction":"function(array, obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context, 1);\r\n    var value = iteratee(obj);\r\n    var low = 0, high = getLength(array);\r\n    while (low < high) {\r\n      var mid = Math.floor((low + high) / 2);\r\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n    }\r\n    return low;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.sortedIndex.[function]","oldFunction":"function(array, obj, iteratee, context) {\r\n        iteratee = _.iteratee(iteratee, context, 1);\r\n        var value = iteratee(obj);\r\n        var low = 0, high = array.length;\r\n        while (low < high) {\r\n            var mid = low + high >>> 1;\r\n            if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n        }\r\n        return low;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.sortedIndex.[function].[arg1]","newType":"string","oldType":"any","containerType":"(array: string[], obj: string, iteratee: any, context: any) => number","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.unique.[function]","newFunction":"function(array, isSorted, iteratee, context) {\r\n    if (!_.isBoolean(isSorted)) {\r\n      context = iteratee;\r\n      iteratee = isSorted;\r\n      isSorted = false;\r\n    }\r\n    if (iteratee != null) iteratee = cb(iteratee, context);\r\n    var result = [];\r\n    var seen = [];\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var value = array[i],\r\n          computed = iteratee ? iteratee(value, i, array) : value;\r\n      if (isSorted) {\r\n        if (!i || seen !== computed) result.push(value);\r\n        seen = computed;\r\n      } else if (iteratee) {\r\n        if (!_.contains(seen, computed)) {\r\n          seen.push(computed);\r\n          result.push(value);\r\n        }\r\n      } else if (!_.contains(result, value)) {\r\n        result.push(value);\r\n      }\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.unique.[function]","oldFunction":"function(array, isSorted, iteratee, context) {\r\n        if (array == null) return [];\r\n        if (!_.isBoolean(isSorted)) {\r\n            context = iteratee;\r\n            iteratee = isSorted;\r\n            isSorted = false;\r\n        }\r\n        if (iteratee != null) iteratee = _.iteratee(iteratee, context);\r\n        var result = [];\r\n        var seen = [];\r\n        for (var i = 0, length = array.length; i < length; i++) {\r\n            var value = array[i];\r\n            if (isSorted) {\r\n                if (!i || seen !== value) result.push(value);\r\n                seen = value;\r\n            } else if (iteratee) {\r\n                var computed = iteratee(value, i, array);\r\n                if (_.indexOf(seen, computed) < 0) {\r\n                    seen.push(computed);\r\n                    result.push(value);\r\n                }\r\n            } else if (_.indexOf(result, value) < 0) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.unique.[function].[return]","newType":"string[] | interface_615","oldType":"any[]","containerType":"(array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.debounce.[function]","newFunction":"function(func, wait, immediate) {\r\n    var timeout, result;\r\n\r\n    var later = function(context, args) {\r\n      timeout = null;\r\n      if (args) result = func.apply(context, args);\r\n    };\r\n\r\n    var debounced = restArgs(function(args) {\r\n      var callNow = immediate && !timeout;\r\n      if (timeout) clearTimeout(timeout);\r\n      if (callNow) {\r\n        timeout = setTimeout(later, wait);\r\n        result = func.apply(this, args);\r\n      } else if (!immediate) {\r\n        timeout = _.delay(later, wait, this, args);\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    debounced.cancel = function() {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n    };\r\n\r\n    return debounced;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.debounce.[function]","oldFunction":"function(func, wait, immediate) {\r\n        var timeout, args, context, timestamp, result;\r\n\r\n        var later = function() {\r\n            var last = _.now() - timestamp;\r\n\r\n            if (last < wait && last > 0) {\r\n                timeout = setTimeout(later, wait - last);\r\n            } else {\r\n                timeout = null;\r\n                if (!immediate) {\r\n                    result = func.apply(context, args);\r\n                    if (!timeout) context = args = null;\r\n                }\r\n            }\r\n        };\r\n\r\n        return function() {\r\n            context = this;\r\n            args = arguments;\r\n            timestamp = _.now();\r\n            var callNow = immediate && !timeout;\r\n            if (!timeout) timeout = setTimeout(later, wait);\r\n            if (callNow) {\r\n                result = func.apply(context, args);\r\n                context = args = null;\r\n            }\r\n\r\n            return result;\r\n        };\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.debounce.[function].[return]","newType":"// Seen as: debounced\ninterface interface_381 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : number | any[] | interface_507;\n    cancel: () => void;\n    placeholder: typeof _;\n}\n\n","oldType":"() => any","containerType":"(func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.reject.[function]","newFunction":"function(obj, predicate, context) {\r\n    return _.filter(obj, _.negate(cb(predicate)), context);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.reject.[function]","oldFunction":"function(obj, predicate, context) {\r\n        return _.filter(obj, _.negate(_.iteratee(predicate)), context);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.reject.[function].[arg1]","newType":"any","oldType":"string | interface_1028","containerType":"(obj: interface_606 | string[], predicate: any, context: any) => Array<any>","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.times.[function]","newFunction":"function(n, iteratee, context) {\r\n    var accum = Array(Math.max(0, n));\r\n    iteratee = optimizeCb(iteratee, context, 1);\r\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n    return accum;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.times.[function]","oldFunction":"function(n, iteratee, context) {\r\n        var accum = Array(Math.max(0, n));\r\n        iteratee = createCallback(iteratee, context, 1);\r\n        for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n        return accum;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.times.[function].[arg1]","newType":"boolean | StringConstructor","oldType":"any","containerType":"(n: number, iteratee: boolean | StringConstructor, context: any) => any[]","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.isString.[function]","newFunction":"function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.isString.[function]","oldFunction":"function(obj) {\r\n            return toString.call(obj) === '[object ' + name + ']';\r\n        }","oldJSDoc":null,"type":"addedProperty","typePath":"window._.isString.[function].[arg0]","key":"match","newType":null,"isAny":true,"isClass":false,"containerType":"{\n    length: any, \n    match: void\n}\n","containerDescription":"object"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.indexOf.[function]","newFunction":"function(array, item, idx) {\r\n      var i = 0, length = getLength(array);\r\n      if (typeof idx == 'number') {\r\n        if (dir > 0) {\r\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n        } else {\r\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n        }\r\n      } else if (sortedIndex && idx && length) {\r\n        idx = sortedIndex(array, item);\r\n        return array[idx] === item ? idx : -1;\r\n      }\r\n      if (item !== item) {\r\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\r\n        return idx >= 0 ? idx + i : -1;\r\n      }\r\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n        if (array[idx] === item) return idx;\r\n      }\r\n      return -1;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.indexOf.[function]","oldFunction":"function(array, item, isSorted) {\r\n        if (array == null) return -1;\r\n        var i = 0, length = array.length;\r\n        if (isSorted) {\r\n            if (typeof isSorted == 'number') {\r\n                i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\r\n            } else {\r\n                i = _.sortedIndex(array, item);\r\n                return array[i] === item ? i : -1;\r\n            }\r\n        }\r\n        for (; i < length; i++) if (array[i] === item) return i;\r\n        return -1;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.indexOf.[function].[arg1]","newType":"string","oldType":"any","containerType":"(array: string[], item: string, idx: number) => number","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.template.[function]","newFunction":"function(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n        \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n        source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.template.[function]","oldFunction":"function(text, settings, oldSettings) {\r\n        if (!settings && oldSettings) settings = oldSettings;\r\n        settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n                (settings.escape || noMatch).source,\r\n                (settings.interpolate || noMatch).source,\r\n                (settings.evaluate || noMatch).source\r\n            ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n            source += text.slice(index, offset).replace(escaper, escapeChar);\r\n            index = offset + match.length;\r\n\r\n            if (escape) {\r\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n            } else if (interpolate) {\r\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n            } else if (evaluate) {\r\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n            }\r\n\r\n            // Adobe VMs need the match returned to produce the correct offest.\r\n            return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n            source + 'return __p;\\n';\r\n\r\n        try {\r\n            var render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n            e.source = source;\r\n            throw e;\r\n        }\r\n\r\n        var template = function(data) {\r\n            return render.call(this, data, _);\r\n        };\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.template.[function].[arg1]","newType":"any","oldType":"// Seen as: oldSettings, settings\ninterface interface_1167 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: any;\n    evaluate: any;\n    interpolate: any;\n    variable: any;\n}\n\n","containerType":"(text: interface_611, settings: any, oldSettings: any) => interface_411","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.throttle.[function]","newFunction":"function(func, wait, options) {\r\n    var timeout, context, args, result;\r\n    var previous = 0;\r\n    if (!options) options = {};\r\n\r\n    var later = function() {\r\n      previous = options.leading === false ? 0 : _.now();\r\n      timeout = null;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    };\r\n\r\n    var throttled = function() {\r\n      var now = _.now();\r\n      if (!previous && options.leading === false) previous = now;\r\n      var remaining = wait - (now - previous);\r\n      context = this;\r\n      args = arguments;\r\n      if (remaining <= 0 || remaining > wait) {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          timeout = null;\r\n        }\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n        if (!timeout) context = args = null;\r\n      } else if (!timeout && options.trailing !== false) {\r\n        timeout = setTimeout(later, remaining);\r\n      }\r\n      return result;\r\n    };\r\n\r\n    throttled.cancel = function() {\r\n      clearTimeout(timeout);\r\n      previous = 0;\r\n      timeout = context = args = null;\r\n    };\r\n\r\n    return throttled;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.throttle.[function]","oldFunction":"function(func, wait, options) {\r\n        var context, args, result;\r\n        var timeout = null;\r\n        var previous = 0;\r\n        if (!options) options = {};\r\n        var later = function() {\r\n            previous = options.leading === false ? 0 : _.now();\r\n            timeout = null;\r\n            result = func.apply(context, args);\r\n            if (!timeout) context = args = null;\r\n        };\r\n        return function() {\r\n            var now = _.now();\r\n            if (!previous && options.leading === false) previous = now;\r\n            var remaining = wait - (now - previous);\r\n            context = this;\r\n            args = arguments;\r\n            if (remaining <= 0 || remaining > wait) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n                previous = now;\r\n                result = func.apply(context, args);\r\n                if (!timeout) context = args = null;\r\n            } else if (!timeout && options.trailing !== false) {\r\n                timeout = setTimeout(later, remaining);\r\n            }\r\n            return result;\r\n        };\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.throttle.[function].[return]","newType":"// Seen as: throttled\ninterface interface_364 {\n    () : any;\n    cancel: () => void;\n}\n\n","oldType":"() => any","containerType":"(func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.lastIndexOf.[function]","newFunction":"function(array, item, idx) {\r\n      var i = 0, length = getLength(array);\r\n      if (typeof idx == 'number') {\r\n        if (dir > 0) {\r\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n        } else {\r\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n        }\r\n      } else if (sortedIndex && idx && length) {\r\n        idx = sortedIndex(array, item);\r\n        return array[idx] === item ? idx : -1;\r\n      }\r\n      if (item !== item) {\r\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\r\n        return idx >= 0 ? idx + i : -1;\r\n      }\r\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n        if (array[idx] === item) return idx;\r\n      }\r\n      return -1;\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.lastIndexOf.[function]","oldFunction":"function(array, item, from) {\r\n        if (array == null) return -1;\r\n        var idx = array.length;\r\n        if (typeof from == 'number') {\r\n            idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\r\n        }\r\n        while (--idx >= 0) if (array[idx] === item) return idx;\r\n        return -1;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.lastIndexOf.[function].[arg0]","newType":"string[]","oldType":"// Seen as: array\ninterface interface_953 {\n    [index: number]: any;\n    length: number;\n}\n\n","containerType":"(array: string[], item: any, idx: number) => number","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.foldr.[function]","newFunction":"function(obj, iteratee, memo, context) {\r\n      var initial = arguments.length >= 3;\r\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.foldr.[function]","oldFunction":"function(obj, iteratee, memo, context) {\r\n        if (obj == null) obj = [];\r\n        iteratee = createCallback(iteratee, context, 4);\r\n        var keys = obj.length !== + obj.length && _.keys(obj),\r\n            index = (keys || obj).length,\r\n            currentKey;\r\n        if (arguments.length < 3) {\r\n            if (!index) throw new TypeError(reduceError);\r\n            memo = obj[keys ? keys[--index] : --index];\r\n        }\r\n        while (index--) {\r\n            currentKey = keys ? keys[index] : index;\r\n            memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n        }\r\n        return memo;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.foldr.[function].[arg2]","newType":"string","oldType":"any","containerType":"(obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.some.[function]","newFunction":"function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n    }\r\n    return false;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.some.[function]","oldFunction":"function(obj, predicate, context) {\r\n        if (obj == null) return false;\r\n        predicate = _.iteratee(predicate, context);\r\n        var keys = obj.length !== +obj.length && _.keys(obj),\r\n            length = (keys || obj).length,\r\n            index, currentKey;\r\n        for (index = 0; index < length; index++) {\r\n            currentKey = keys ? keys[index] : index;\r\n            if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n        }\r\n        return false;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.some.[function].[arg0]","newType":"string[] | interface_582","oldType":"// Seen as: obj\ninterface interface_951 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n","containerType":"(obj: string[] | interface_582, predicate: any, context: any) => boolean","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.unique.[function]","newFunction":"function(array, isSorted, iteratee, context) {\r\n    if (!_.isBoolean(isSorted)) {\r\n      context = iteratee;\r\n      iteratee = isSorted;\r\n      isSorted = false;\r\n    }\r\n    if (iteratee != null) iteratee = cb(iteratee, context);\r\n    var result = [];\r\n    var seen = [];\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var value = array[i],\r\n          computed = iteratee ? iteratee(value, i, array) : value;\r\n      if (isSorted) {\r\n        if (!i || seen !== computed) result.push(value);\r\n        seen = computed;\r\n      } else if (iteratee) {\r\n        if (!_.contains(seen, computed)) {\r\n          seen.push(computed);\r\n          result.push(value);\r\n        }\r\n      } else if (!_.contains(result, value)) {\r\n        result.push(value);\r\n      }\r\n    }\r\n    return result;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.unique.[function]","oldFunction":"function(array, isSorted, iteratee, context) {\r\n        if (array == null) return [];\r\n        if (!_.isBoolean(isSorted)) {\r\n            context = iteratee;\r\n            iteratee = isSorted;\r\n            isSorted = false;\r\n        }\r\n        if (iteratee != null) iteratee = _.iteratee(iteratee, context);\r\n        var result = [];\r\n        var seen = [];\r\n        for (var i = 0, length = array.length; i < length; i++) {\r\n            var value = array[i];\r\n            if (isSorted) {\r\n                if (!i || seen !== value) result.push(value);\r\n                seen = value;\r\n            } else if (iteratee) {\r\n                var computed = iteratee(value, i, array);\r\n                if (_.indexOf(seen, computed) < 0) {\r\n                    seen.push(computed);\r\n                    result.push(value);\r\n                }\r\n            } else if (_.indexOf(result, value) < 0) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.unique.[function].[arg0].[indexer]","newType":"string | {\"\\\"\": string, \"&\": string, &#x27;: string, &#x60;: string, &amp;: string, &gt;: string, &lt;: string, &quot;: string, \"'\": string, \"<\": string, \">\": string, \"`\": string} | string[]","oldType":"any[]","containerType":"Array<any>","containerDescription":"array-type"},{"isInOldDec":false,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.flatten.[function]","newFunction":"function(array, shallow) {\r\n    return flatten(array, shallow, false);\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.flatten.[function]","oldFunction":"function(array, shallow) {\r\n        return flatten(array, shallow, false, []);\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.flatten.[function].[return].[indexer]","newType":"string | {callee: () => void} | Array<any>","oldType":"void","containerType":"Array<any>","containerDescription":"array-type"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.pairs.[function].[return]","newFunction":"function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var pairs = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      pairs[i] = [keys[i], obj[keys[i]]];\r\n    }\r\n    return pairs;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.pairs.[function].[return]","oldFunction":"function(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var pairs = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            pairs[i] = [keys[i], obj[keys[i]]];\r\n        }\r\n        return pairs;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.pairs.[function].[return].[indexer].[indexer]","newType":"string | number","oldType":"string","containerType":"Array<any>","containerDescription":"array-type"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.wrap.[function].[return].[function]","newFunction":"function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.wrap.[function].[return].[function]","oldFunction":"function() {\r\n            var position = 0;\r\n            var args = boundArgs.slice();\r\n            for (var i = 0, length = args.length; i < length; i++) {\r\n                if (args[i] === _) args[i] = arguments[position++];\r\n            }\r\n            while (position < arguments.length) args.push(arguments[position++]);\r\n            return func.apply(this, args);\r\n        }","oldJSDoc":null,"type":"changedType","typePath":"window._.wrap.[function].[return].[function].[return]","newType":"any","oldType":"() => any","containerType":"() => any","containerDescription":"function"},{"isInOldDec":true,"isInOldDecContainer":true,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.property.[function].[return].[function]","newFunction":"function(obj) {\r\n      return obj == null ? void 0 : obj[key];\r\n    }","newJSDoc":null,"oldInclosingFunctionPath":"window._.property.[function].[return]","oldFunction":"function(key) {\r\n        return function(obj) {\r\n            return obj[key];\r\n        };\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.property.[function].[return].[function].[arg0]","newType":"any","oldType":"// Seen as: obj\ninterface interface_1067 {\n}\n\n","containerType":"(obj: any) => number","containerDescription":"function"},{"isInOldDec":false,"isInOldDecContainer":false,"isInNewDec":false,"isInNewDecContainer":false,"newInclosingFunctionPath":"window._.memoize.[function]","newFunction":"function(func, hasher) {\r\n    var memoize = function(key) {\r\n      var cache = memoize.cache;\r\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\r\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\r\n      return cache[address];\r\n    };\r\n    memoize.cache = {};\r\n    return memoize;\r\n  }","newJSDoc":null,"oldInclosingFunctionPath":"window._.memoize.[function]","oldFunction":"function(func, hasher) {\r\n        var memoize = function(key) {\r\n            var cache = memoize.cache;\r\n            var address = hasher ? hasher.apply(this, arguments) : key;\r\n            if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\r\n            return cache[address];\r\n        };\r\n        memoize.cache = {};\r\n        return memoize;\r\n    }","oldJSDoc":null,"type":"changedType","typePath":"window._.memoize.[function].[return].[function].[arg0]","newType":"string | number","oldType":"string","containerType":"// Seen as: memoize\ninterface interface_406 {\n    (key: string | number) : any;\n    cache: interface_534;\n}\n\n","containerDescription":"interface"}],"newName":"Underscore.js (1.8)","oldName":"Underscore.js (1.7)","oldDeclaration":"declare class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_1139 | any[], predicate: any, context: any) => boolean;\n    static any: (obj: interface_951, predicate: any, context: any) => boolean;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: (func: string | interface_918, context: any) => any;\n    static bindAll: (obj: interface_981) => interface_902;\n    static chain: (obj: any) => {_chain: boolean} | _;\n    static clone: (obj: interface_1140) => interface_1141;\n    static collect: (obj: any[] | interface_1142, iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_1143) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_1144 | any[], target: any) => boolean;\n    static countBy: (obj: interface_1145 | string[], iteratee: any, context: any) => interface_856;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, immediate: any) => () => any;\n    static defaults: (obj: interface_1146) => interface_1147;\n    static defer: (func: number) => number;\n    static delay: (func: {apply: (arg0: void, arg1: void) => void}, wait: any) => number;\n    static detect: (obj: interface_971, predicate: any, context: any) => any;\n    static difference: (array: interface_1148 | string[]) => Array<any>;\n    static drop: (array: any, n: number, guard: any) => Array<any>;\n    static each: (obj: any[] | interface_1149, iteratee: any, context?: any) => interface_1150 | any[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_1139 | any[], predicate: any, context: any) => boolean;\n    static extend: (obj: interface_1146) => interface_1151;\n    static filter: (obj: interface_1148 | string[], predicate: any, context: any) => Array<any>;\n    static find: (obj: interface_971, predicate: any, context: any) => any;\n    static findWhere: (obj: interface_905, attrs: interface_987) => any;\n    static first: (array: interface_936, n: number, guard: any) => Array<any>;\n    static flatten: (array: interface_973, shallow: any) => Array<any>;\n    static foldl: (obj: interface_1152 | any[], iteratee: any, memo: any, context: any) => any;\n    static foldr: (obj: any[] | interface_1153, iteratee: any, memo: any, context: any) => any;\n    static forEach: (obj: any[] | interface_1149, iteratee: any, context?: any) => interface_1150 | any[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_1154, iteratee: any, context: any) => interface_836;\n    static has: (obj: {_wrapped: any, constructor: void, length: any}, key: string) => boolean;\n    static head: (array: interface_936, n: number, guard: any) => Array<any>;\n    static identity: (value: any) => any;\n    static include: (obj: interface_1144 | any[], target: any) => boolean;\n    static indexBy: (obj: string[] | interface_1155, iteratee: any, context: any) => interface_842;\n    static indexOf: (array: any[], item: any, isSorted: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => Array<any>;\n    static inject: (obj: interface_1152 | any[], iteratee: any, memo: any, context: any) => any;\n    static intersection: (array: interface_967) => any[] | interface_1156;\n    static invert: (obj: interface_1157) => interface_1158;\n    static invoke: (obj: interface_829, method: string | interface_832) => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: {callee: () => void, length: number}) => boolean;\n    static isEqual: (a: number | interface_925, b: number | interface_995) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isNaN: (obj: number) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any}) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any, argCount: number) => any;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_961, n: number, guard: any) => Array<any>;\n    static lastIndexOf: (array: interface_953, item: any, from: number) => number;\n    static map: (obj: any[] | interface_1142, iteratee: any, context: any) => any[];\n    static matches: (attrs: any) => (obj: Object | interface_1069) => boolean;\n    static max: (obj: any[] | interface_1159, iteratee: any, context: any) => number;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_849;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: string[] | interface_1160, iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: any) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: interface_956, values: interface_1013) => interface_879;\n    static omit: (obj: Object | interface_982, iteratee: string | interface_1022, context: any) => interface_903;\n    static once: () => () => any;\n    static pairs: (obj: any) => Array<string[]>;\n    static partial: (func: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any, arg1: number) => () => () => any;\n    static partition: (obj: string[] | interface_1161, predicate: any, context: any) => Array<Array<any>>;\n    static pick: (obj: Object | interface_969, iteratee: any, context: any) => interface_894;\n    static pluck: (obj: interface_930, key: string) => any[];\n    static property: (key: any) => (obj: interface_1067) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: interface_1152 | any[], iteratee: any, memo: any, context: any) => any;\n    static reduceRight: (obj: any[] | interface_1153, iteratee: any, memo: any, context: any) => any;\n    static reject: (obj: string[] | interface_1162, predicate: string | interface_1028, context: any) => Array<any>;\n    static rest: (array: any, n: number, guard: any) => Array<any>;\n    static result: (object: interface_958, property: string | number) => any;\n    static sample: (obj: interface_1163 | any[], n: any, guard: any) => any;\n    static select: (obj: interface_1148 | string[], predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_1164 | any[]) => any[];\n    static size: (obj: interface_1165) => number;\n    static some: (obj: interface_951, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_921, iteratee: any, context: any) => any[];\n    static sortedIndex: (array: any[], obj: any, iteratee: any, context: any) => number;\n    static tail: (array: any, n: number, guard: any) => Array<any>;\n    static take: (array: interface_936, n: number, guard: any) => Array<any>;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_1166, settings: interface_1167, oldSettings: interface_1168) => interface_869;\n    static templateSettings: interface_1169;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => () => any;\n    static times: (n: number, iteratee: any, context: any) => any[];\n    static toArray: (obj: interface_945) => any[];\n    static unescape: (string: string) => string;\n    static union: () => any[];\n    static uniq: (array: Array<any[]>, isSorted: any, iteratee: any, context: any) => any[];\n    static unique: (array: Array<any[]>, isSorted: any, iteratee: any, context: any) => any[];\n    static uniqueId: (prefix: string | number) => string;\n    static values: (obj: any[] | interface_1170) => any[];\n    static where: (obj: string[] | interface_1171, attrs: interface_1031) => Array<any>;\n    static without: (array: string[] | interface_1172) => Array<any>;\n    static wrap: (func: any, wrapper: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any) => () => () => any;\n    static zip: (array: any) => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    any: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    filter: () => any;\n    find: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    value: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\n// Seen as: arguments, obj\ninterface interface_1139 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_951 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\ninterface interface_918 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any) : any;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: obj\ninterface interface_981 {\n}\n\n// Seen as: obj\ninterface interface_902 {\n}\n\n// Seen as: obj\ninterface interface_1140 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    slice: () => void;\n}\n\n// Seen as: obj\ninterface interface_1141 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    slice: () => void;\n}\n\n// Seen as: arguments, obj\ninterface interface_1142 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1143 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: array, obj\ninterface interface_1144 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, obj\ninterface interface_1145 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_856 {\n}\n\ninterface interface_1146 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1147 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_971 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\ninterface interface_1148 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, obj\ninterface interface_1149 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, arguments, obj\ninterface interface_1150 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1151 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_905 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_987 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: array\ninterface interface_936 {\n    [index: number]: any;\n}\n\n// Seen as: arg1, input, obj\ninterface interface_973 {\n    [index: number]: interface_1084;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_1152 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_1153 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, obj\ninterface interface_1154 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_836 {\n}\n\n// Seen as: arg0, obj\ninterface interface_1155 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_842 {\n}\n\n// Seen as: array\ninterface interface_967 {\n    [index: number]: any;\n    length: number;\n}\n\n// Seen as: array, obj, result\ninterface interface_1156 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1157 {\n    \"\\\"\": string;\n    \"&\": string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1158 {\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n}\n\n// Seen as: obj\ninterface interface_829 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\ninterface interface_832 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any) : any;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: a, b\ninterface interface_925 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_928;\n    \"`\": string;\n    constructor: interface_1169 | string | ObjectConstructor | StringConstructor | NumberConstructor;\n    length: string;\n}\n\n// Seen as: a, b\ninterface interface_995 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_928;\n    \"`\": string;\n    constructor: interface_1169 | string | ObjectConstructor | StringConstructor | NumberConstructor;\n    length: string;\n}\n\n// Seen as: array\ninterface interface_961 {\n    [index: number]: any;\n    length: number;\n}\n\n// Seen as: array\ninterface interface_953 {\n    [index: number]: any;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_1069 {\n}\n\n// Seen as: arg0, obj\ninterface interface_1159 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: memoize\ninterface interface_849 {\n    (address: string) : any;\n    cache: interface_1073;\n}\n\n// Seen as: arg0, obj\ninterface interface_1160 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: list\ninterface interface_956 {\n    [index: number]: string | number | interface_1071;\n    length: number;\n}\n\n// Seen as: values\ninterface interface_1013 {\n    [index: number]: string | number | interface_1071;\n}\n\n// Seen as: result\ninterface interface_879 {\n}\n\n// Seen as: obj\ninterface interface_982 {\n}\n\n// Seen as: arg0, func, iteratee\ninterface interface_1022 {\n    (accumulator: any, interceptor?: any, oldSettings?: any, collection?: any, arg4?: void) : any;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: result\ninterface interface_903 {\n}\n\n// Seen as: arg0, obj\ninterface interface_1161 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_969 {\n}\n\n// Seen as: result\ninterface interface_894 {\n}\n\n// Seen as: arguments, obj\ninterface interface_930 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_1067 {\n}\n\ninterface interface_1162 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, func, obj\ninterface interface_1028 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any, arg4?: void) : any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: object\ninterface interface_958 {\n}\n\ninterface interface_1163 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj, set\ninterface interface_1164 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_1165 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_921 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: text\ninterface interface_1166 {\n    replace: (arg0: void, arg1: void) => void;\n    slice: (arg0: void, arg1: void) => void;\n}\n\n// Seen as: oldSettings, settings\ninterface interface_1167 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: any;\n    evaluate: any;\n    interpolate: any;\n    variable: any;\n}\n\n// Seen as: oldSettings, settings\ninterface interface_1168 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: any;\n    evaluate: any;\n    interpolate: any;\n    variable: any;\n}\n\n// Seen as: template\ninterface interface_869 {\n    (data: any) : any;\n    source: string;\n}\n\ninterface interface_1169 {\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: obj\ninterface interface_945 {\n    [index: number]: any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_1170 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1171 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_1031 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_1172 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg1, input, obj\ninterface interface_1084 {\n    [index: number]: interface_1084;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    callee: () => void;\n    length: number;\n}\n\n// Seen as: a, b\ninterface interface_928 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_928;\n    \"`\": string;\n    constructor: interface_1169 | string | ObjectConstructor | StringConstructor | NumberConstructor;\n    length: string;\n}\n\n// Seen as: cache\ninterface interface_1073 {\n}\n\ninterface interface_1071 {\n    [index: number]: string | number | interface_1071;\n}\n\n","newDeclaration":"declare class _ {\n    constructor (obj: any);\n    static VERSION: string;\n    static after: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static all: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static allKeys: (obj: any) => interface_581 | string[];\n    static any: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static assign: (obj: any) => any;\n    static before: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => () => any;\n    static bind: () => interface_346;\n    static bindAll: () => any;\n    static chain: (obj: any) => any;\n    static chunk: (array: {length: number}, count: number) => Array<any>;\n    static clone: (obj: interface_583 | Array<any>) => any;\n    static collect: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static compact: (array: string[] | interface_585) => Array<any>;\n    static compose: () => () => any;\n    static constant: (value: any) => () => any;\n    static contains: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static countBy: (obj: string[] | interface_587, iteratee: any, context: any) => Array<any>;\n    static create: (prototype: interface_588, props: any) => any;\n    static debounce: (func: {apply: (arg0: void, arg1: void) => void}, wait: any, immediate: any) => interface_381;\n    static defaults: (obj: any) => any;\n    static defer: () => any;\n    static delay: () => number;\n    static detect: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static difference: () => Array<any>;\n    static drop: (array: {length: any}, n: number, guard: any) => any;\n    static each: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static escape: (string: string) => string;\n    static every: (obj: interface_580 | string[], predicate: any, context: any) => boolean;\n    static extend: (obj: any) => any;\n    static extendOwn: (obj: any) => any;\n    static filter: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static find: (obj: string[] | interface_589, predicate: any, context: any) => any;\n    static findIndex: (array: string[], predicate: any, context: any) => number;\n    static findKey: (obj: interface_443, predicate: any, context: any) => string;\n    static findLastIndex: (array: string[], predicate: any, context: any) => number;\n    static findWhere: (obj: interface_593 | string[], attrs: any) => any;\n    static first: (array: interface_448, n: number, guard: any) => any;\n    static flatten: (array: Array<any>, shallow: any) => Array<any>;\n    static foldl: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static foldr: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static forEach: (obj: interface_590 | string[], iteratee: boolean | StringConstructor, context?: any) => interface_591 | string[];\n    static functions: (obj: typeof _) => string[];\n    static groupBy: (obj: string[] | interface_596, iteratee: any, context: any) => Array<any[]>;\n    static has: (obj: any, key: string) => boolean;\n    static head: (array: interface_448, n: number, guard: any) => any;\n    static identity: (value: any) => any;\n    static include: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static includes: (obj: interface_586 | string[], item: string, fromIndex: number, guard: any) => boolean;\n    static indexBy: (obj: string[] | interface_597, iteratee: any, context: any) => Array<Array<any>>;\n    static indexOf: (array: string[], item: string, idx: number) => number;\n    static initial: (array: {length: number}, n: number, guard: any) => any;\n    static inject: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static intersection: (array: string[]) => interface_598 | string[];\n    static invert: (obj: interface_599) => interface_600;\n    static invoke: () => any[];\n    static isArguments: (obj: {callee: () => void, length: number}) => boolean;\n    static isArray: (arg: any) => boolean;\n    static isBoolean: (obj: boolean) => boolean;\n    static isDate: (obj: any) => boolean;\n    static isElement: (obj: {nodeType: number}) => boolean;\n    static isEmpty: (obj: string[] | interface_601) => boolean;\n    static isEqual: (a: number | interface_457, b: number | interface_463) => boolean;\n    static isError: (obj: any) => boolean;\n    static isFinite: (obj: string) => boolean;\n    static isFunction: (obj: any) => boolean;\n    static isMatch: (object: any, attrs: any) => boolean;\n    static isNaN: (obj: any) => boolean;\n    static isNull: (obj: any) => boolean;\n    static isNumber: (obj: any) => boolean;\n    static isObject: (obj: any) => boolean;\n    static isRegExp: (obj: any) => boolean;\n    static isString: (obj: {length: any, match: void}) => boolean;\n    static isSymbol: (obj: any) => boolean;\n    static isUndefined: (obj: any) => boolean;\n    static iteratee: (value: any, context: any) => boolean | StringConstructor;\n    static keys: (obj: any) => string[];\n    static last: (array: interface_445, n: number, guard: any) => any;\n    static lastIndexOf: (array: string[], item: any, idx: number) => number;\n    static map: (obj: interface_584 | string[], iteratee: any, context: any) => any[];\n    static mapObject: (obj: interface_450, iteratee: any, context: any) => interface_402;\n    static matcher: (attrs: any) => (obj: any) => boolean;\n    static matches: (attrs: any) => (obj: any) => boolean;\n    static max: (obj: string[] | interface_602, iteratee: any, context: any) => string;\n    static memoize: (func: {apply: (arg0: void, arg1: void) => void}, hasher: {apply: (arg0: void, arg1: void) => void}) => interface_406;\n    static methods: (obj: typeof _) => string[];\n    static min: (obj: interface_603 | string[], iteratee: any, context: any) => number;\n    static mixin: (obj: typeof _) => void;\n    static negate: (predicate: boolean | StringConstructor) => () => boolean;\n    static noConflict: () => any;\n    static noop: () => void;\n    static now: () => number;\n    static object: (list: Array<any>, values: interface_462) => interface_369;\n    static omit: () => interface_417;\n    static once: () => any;\n    static pairs: (obj: interface_454) => Array<Array<any>>;\n    static partial: interface_530;\n    static partition: (obj: string[] | interface_604, iteratee: any, context: any) => Array<Array<any>>;\n    static pick: () => interface_385;\n    static pluck: (obj: interface_605 | string[], key: string) => any[];\n    static property: (key: any) => (obj: any) => number;\n    static propertyOf: (obj: interface_435) => (key: string | number) => any;\n    static random: (min: number, max: number) => number;\n    static range: (start: number, stop: number, step: number) => number[];\n    static reduce: (obj: string[] | interface_594, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: any, context: any) => any;\n    static reduceRight: (obj: string[] | interface_595, iteratee: (name: any, arg1: number, arg2: string[], arg3?: void, arg4?: void) => void, memo: string, context: any) => any;\n    static reject: (obj: interface_606 | string[], predicate: any, context: any) => Array<any>;\n    static rest: (array: {length: any}, n: number, guard: any) => any;\n    static restArgs: (func: (callArgs: any, otherArrays: string | any[] | interface_330, args?: {concat: (arg0: void) => void}, arg3?: void, arg4?: void) => any, startIndex?: number) => interface_343;\n    static result: (object: interface_440, prop: string | number, fallback: string | interface_464) => string | interface_376;\n    static sample: (obj: string[] | interface_607, n: number, guard: any) => any;\n    static select: (obj: string[] | interface_592, predicate: any, context: any) => Array<any>;\n    static shuffle: (obj: interface_608 | string[]) => any;\n    static size: (obj: interface_609 | string[]) => number;\n    static some: (obj: string[] | interface_582, predicate: any, context: any) => boolean;\n    static sortBy: (obj: interface_610 | string[], iteratee: any, context: any) => any[];\n    static sortedIndex: (array: string[], obj: string, iteratee: any, context: any) => number;\n    static tail: (array: {length: any}, n: number, guard: any) => any;\n    static take: (array: interface_448, n: number, guard: any) => any;\n    static tap: (obj: any, interceptor: (arg0: void) => void) => any;\n    static template: (text: interface_611, settings: any, oldSettings: any) => interface_411;\n    static templateSettings: interface_612;\n    static throttle: (func: {apply: (arg0: void, arg1: void) => void}, wait: number, options: {leading: boolean, trailing: boolean}) => interface_364;\n    static times: (n: number, iteratee: boolean | StringConstructor, context: any) => any[];\n    static toArray: (obj: interface_613 | string[]) => any[];\n    static unescape: (string: string) => string;\n    static union: () => string[] | interface_614;\n    static uniq: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static unique: (array: Array<any>, isSorted: any, iteratee: any, context: any) => string[] | interface_615;\n    static uniqueId: (prefix: string | number) => string;\n    static unzip: (array: interface_616 | string[]) => Array<any[]>;\n    static values: (obj: interface_617 | any[]) => any[];\n    static where: (obj: string[] | interface_618, attrs: any) => Array<any>;\n    static without: () => Array<any>;\n    static wrap: (func: any, wrapper: any) => () => any;\n    static zip: () => Array<any[]>;\n    _wrapped: any;\n    after: () => any;\n    all: () => any;\n    allKeys: () => any;\n    any: () => any;\n    assign: () => any;\n    before: () => any;\n    bind: () => any;\n    bindAll: () => any;\n    chain: () => any;\n    chunk: () => any;\n    clone: () => any;\n    collect: () => any;\n    compact: () => any;\n    compose: () => any;\n    concat: () => any;\n    constant: () => any;\n    contains: () => any;\n    countBy: () => any;\n    create: () => any;\n    debounce: () => any;\n    defaults: () => any;\n    defer: () => any;\n    delay: () => any;\n    detect: () => any;\n    difference: () => any;\n    drop: () => any;\n    each: () => any;\n    escape: () => any;\n    every: () => any;\n    extend: () => any;\n    extendOwn: () => any;\n    filter: () => any;\n    find: () => any;\n    findIndex: () => any;\n    findKey: () => any;\n    findLastIndex: () => any;\n    findWhere: () => any;\n    first: () => any;\n    flatten: () => any;\n    foldl: () => any;\n    foldr: () => any;\n    forEach: () => any;\n    functions: () => any;\n    groupBy: () => any;\n    has: () => any;\n    head: () => any;\n    identity: () => any;\n    include: () => any;\n    includes: () => any;\n    indexBy: () => any;\n    indexOf: () => any;\n    initial: () => any;\n    inject: () => any;\n    intersection: () => any;\n    invert: () => any;\n    invoke: () => any;\n    isArguments: () => any;\n    isArray: () => any;\n    isBoolean: () => any;\n    isDate: () => any;\n    isElement: () => any;\n    isEmpty: () => any;\n    isEqual: () => any;\n    isError: () => any;\n    isFinite: () => any;\n    isFunction: () => any;\n    isMatch: () => any;\n    isNaN: () => any;\n    isNull: () => any;\n    isNumber: () => any;\n    isObject: () => any;\n    isRegExp: () => any;\n    isString: () => any;\n    isSymbol: () => any;\n    isUndefined: () => any;\n    iteratee: () => any;\n    join: () => any;\n    keys: () => any;\n    last: () => any;\n    lastIndexOf: () => any;\n    map: () => any;\n    mapObject: () => any;\n    matcher: () => any;\n    matches: () => any;\n    max: () => any;\n    memoize: () => any;\n    methods: () => any;\n    min: () => any;\n    mixin: () => any;\n    negate: () => any;\n    noConflict: () => any;\n    noop: () => any;\n    now: () => any;\n    object: () => any;\n    omit: () => any;\n    once: () => any;\n    pairs: () => any;\n    partial: () => any;\n    partition: () => any;\n    pick: () => any;\n    pluck: () => any;\n    pop: () => any;\n    property: () => any;\n    propertyOf: () => any;\n    push: () => any;\n    random: () => any;\n    range: () => any;\n    reduce: () => any;\n    reduceRight: () => any;\n    reject: () => any;\n    rest: () => any;\n    restArgs: () => any;\n    result: () => any;\n    reverse: () => any;\n    sample: () => any;\n    select: () => any;\n    shift: () => any;\n    shuffle: () => any;\n    size: () => any;\n    slice: () => any;\n    some: () => any;\n    sort: () => any;\n    sortBy: () => any;\n    sortedIndex: () => any;\n    splice: () => any;\n    tail: () => any;\n    take: () => any;\n    tap: () => any;\n    template: () => any;\n    throttle: () => any;\n    times: () => any;\n    toArray: () => any;\n    toJSON: () => any;\n    toString: () => string;\n    unescape: () => any;\n    union: () => any;\n    uniq: () => any;\n    unique: () => any;\n    uniqueId: () => any;\n    unshift: () => any;\n    unzip: () => any;\n    value: () => any;\n    valueOf: () => any;\n    values: () => any;\n    where: () => any;\n    without: () => any;\n    wrap: () => any;\n    zip: () => any;\n}\ninterface CtorConstructor {\n    new () : Ctor\n}\n\n// Seen as: \ninterface Ctor {\n}\n\ninterface interface_580 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: keys\ninterface interface_581 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_582 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_346 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : number | any[] | interface_507;\n    placeholder: typeof _;\n}\n\ninterface interface_583 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_584 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    match: void;\n}\n\ninterface interface_585 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_586 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_587 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_588 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    constructor: CtorConstructor;\n}\n\n// Seen as: debounced\ninterface interface_381 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : number | any[] | interface_507;\n    cancel: () => void;\n    placeholder: typeof _;\n}\n\ninterface interface_589 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_590 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_591 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: arg0, obj\ninterface interface_592 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_443 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_593 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: array\ninterface interface_448 {\n    [index: number]: any;\n    length: number;\n}\n\ninterface interface_594 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_595 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_596 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_597 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_598 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_599 {\n    \"\\\"\": string;\n    \"&\": string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_600 {\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n}\n\ninterface interface_601 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    callee: () => void;\n}\n\n// Seen as: a, b\ninterface interface_457 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_577;\n    \"`\": string;\n    constructor: string | NumberConstructor | ObjectConstructor | StringConstructor | interface_619;\n    length: string;\n}\n\n// Seen as: a, b\ninterface interface_463 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_577;\n    \"`\": string;\n    constructor: string | NumberConstructor | ObjectConstructor | StringConstructor | interface_619;\n    length: string;\n}\n\n// Seen as: array\ninterface interface_445 {\n    [index: number]: any;\n    length: number;\n}\n\n// Seen as: obj\ninterface interface_450 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: results\ninterface interface_402 {\n}\n\ninterface interface_602 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: memoize\ninterface interface_406 {\n    (key: string | number) : any;\n    cache: interface_534;\n}\n\n// Seen as: obj\ninterface interface_603 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: values\ninterface interface_462 {\n    [index: number]: string | number | interface_531;\n}\n\n// Seen as: result\ninterface interface_369 {\n}\n\n// Seen as: result\ninterface interface_417 {\n}\n\n// Seen as: obj\ninterface interface_454 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_530 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : () => any;\n    placeholder: typeof _;\n}\n\ninterface interface_604 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_385 {\n}\n\ninterface interface_605 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_435 {\n}\n\ninterface interface_606 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: keys\ninterface interface_330 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any) : any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n    placeholder: typeof _;\n}\n\ninterface interface_343 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : number | any[] | interface_496;\n    placeholder: typeof _;\n}\n\n// Seen as: object\ninterface interface_440 {\n}\n\ninterface interface_464 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any) : any;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n    placeholder: typeof _;\n}\n\ninterface interface_376 {\n    (predicate: any, interceptor?: any, oldSettings?: any, context?: any) : any;\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n    placeholder: typeof _;\n}\n\n// Seen as: obj\ninterface interface_607 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_608 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_609 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_610 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: text\ninterface interface_611 {\n    replace: (arg0: void, arg1: void) => void;\n    slice: (arg0: void, arg1: void) => void;\n}\n\n// Seen as: template\ninterface interface_411 {\n    (data: any) : any;\n    source: string;\n}\n\ninterface interface_612 {\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n}\n\n// Seen as: throttled\ninterface interface_364 {\n    () : any;\n    cancel: () => void;\n}\n\n// Seen as: obj\ninterface interface_613 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    match: (arg0: void) => void;\n}\n\n// Seen as: result\ninterface interface_614 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_615 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\ninterface interface_616 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: obj\ninterface interface_617 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    match: void;\n}\n\ninterface interface_618 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n}\n\n// Seen as: result\ninterface interface_507 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    placeholder: typeof _;\n}\n\n// Seen as: a, b\ninterface interface_577 {\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    _wrapped: number | interface_577;\n    \"`\": string;\n    constructor: string | NumberConstructor | ObjectConstructor | StringConstructor | interface_619;\n    length: string;\n}\n\ninterface interface_619 {\n    escape: RegExp;\n    evaluate: RegExp;\n    interpolate: RegExp;\n    placeholder: typeof _;\n}\n\n// Seen as: cache\ninterface interface_534 {\n}\n\ninterface interface_531 {\n    [index: number]: string | number | interface_531;\n}\n\n// Seen as: result\ninterface interface_496 {\n    (arg0: (times: number, func: {apply: (arg0: void, arg1: void) => void}) => number | (() => any), arg1: number | typeof _, arg2?: number) : any;\n    \"\\\"\": string;\n    \"&\": string;\n    &#x27;: string;\n    &#x60;: string;\n    &amp;: string;\n    &gt;: string;\n    &lt;: string;\n    &quot;: string;\n    \"'\": string;\n    \"<\": string;\n    \">\": string;\n    \"`\": string;\n    placeholder: typeof _;\n}\n\n","newDecAvailable":false}